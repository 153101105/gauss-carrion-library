/*
** Procedure to estimate finite sample critical values
** for the DF test statistic allowing for one structural
** break at a known time (Carrion, Sans� and Art�s; 1998).
**
** FORMAT:
**
**     crit_v = cvperron(model,t,lam);
**
** INPUT:
**
**    model      The model we have just specified:
**                  1 for model A,
**                  2 for model B,
**                  3 for model C.
**    t          The sample size.
**    lam        The break fraction. This value must
**               belong to the interval (0, 1).
**
** OUTPUT:
**
**    crit_v     (8x1)-vector of finite sample critical values for
**               1, 2.5, 5, 10, 90, 95, 97.5 and 99% sign. levels.
**
** GLOBALS:
**
**    __output = 1  If critical values are to be shown on the screen,
**                  and whatever else if not.
**
**   (c) 1998 Josep Llu�s Carrion-i-Silvestre
**          Departament d'Econometria, Estad�stica
**          i Economia Espanyola.
**          Universitat de Barcelona.
*/

proc(1) = cvperron(model, t, lam);
    
    local mask, fmt, y, B, x, cv;
    local output_ind;
    
    output_ind = 1;
    
    IF (model != 1) AND (model != 2) AND (model != 3);
        errorlog("ERROR: try to specify the model again");
        stop;
    ENDIF;
    
    IF (lam <= 0) OR (lam >= 1);
        errorlog("ERROR: lamda must belong to any compact subset of (0, 1)");
        stop;
    ENDIF;
    
    let mask[1, 9] = 0 1 1 1 1 1 1 1 1;
    let fmt[9, 3] = "*.*lf" 8 8,"*.*lf" 10 3,"*.*lf" 7 3,"*.*lf" 7 3,
        "*.*lf" 7 3, "*.*lf" 10 3,"*.*lf" 7 3,"*.*lf" 7 3,"*.*lf" 7 3;
    
    x = 1~inv(t)~inv(t^2)~lam~lam/t~lam/t^2~lam^2~lam^2/t~lam^2/t^2~
        lam^3~lam^3/t~lam^3/t^2~lam^4~lam^4/t~lam^4/t^2;
    
    y = 1~0~0~lam~0~0~lam^2~0~0~lam^3~0~0~lam^4~0~0;
    
    IF model == 1;
        B = { -4.002         -3.677         -3.404         -3.074
            -0.929         -0.545         -0.194          0.272,
            5.291          6.410          8.273          6.137
            4.361          5.141         10.687              0,
            -49.977              0              0         99.781
            194.159        194.472              0        329.987,
            -3.261         -3.464         -3.664         -4.130
            -7.309         -8.611         -9.754        -11.201,
            -155.592       -140.093       -131.090        -80.607
            0              0        -54.900              0,
            -69.429        -96.589        -56.519      -1028.300
            -2062.400      -2091.000              0      -1493.500,
            11.887         12.603         13.307         15.016
            31.806         37.983         43.206         49.241,
            511.736        462.406        430.462        255.371
            0              0        175.879              0,
            0              0              0       3290.200
            7154.500       6888.800              0       4621.400,
            -17.334        -18.384        -19.331        -21.712
            -48.990        -58.790        -66.985        -76.339,
            -688.629       -623.866       -584.960       -352.198
            0              0       -222.524         66.146,
            0              0              0      -4173.900
            -9695.200      -8929.800              0      -7554.400,
            8.735          9.259          9.694         10.823
            24.492         29.426         33.545         38.287,
            327.937        299.525        283.281        176.262
            0              0         98.151        -66.297,
            0              0              0       1834.600
            4497.900       4003.200              0       4297.400};
        
    ELSEIF model == 2;
        B = { -3.7703        -3.4344        -3.1759        -2.8945
            -1.1496       -0.86537       -0.59108       -0.26842,
            -3.9666        -2.8606              0         2.8272
            -4.8311        -6.2445       -10.6376        -9.2633,
            0              0       -73.5714      -121.6916
            0              0         113.48              0,
            -3.1819        -3.5114        -3.3647        -3.1101
            -0.40668       -0.23059       -0.27931       -0.27627,
            -103.9032       -70.1896       -86.4918       -90.0431
            43.6832         46.507        82.7679        40.9131,
            0              0         1333.1         1778.7
            0              0          -1314              0,
            6.1225         7.0003         6.1399         4.9187
            -5.4759        -5.8601        -5.1983        -4.7011,
            241.6556       160.2537       231.8116       249.7453
            -172.8884      -174.2544      -314.0077      -135.5907,
            0        -1169.5        -6134.8        -7425.4
            0              0           5179              0,
            -5.6879        -6.8536        -5.5308         -3.716
            9.7149         9.4943         7.4878         5.7631,
            -279.2934      -188.0397      -290.0172       -317.803
            240.3863       227.5904       447.1397       165.1746,
            0         2360.3         9288.8        10855.7
            -307.2884              0        -8086.1       -251.648,
            2.4695         3.0562         2.4415         1.5915
            -4.2733        -3.9587        -2.6406        -1.5703,
            128.2131        89.5077       135.7877        147.222
            -119.4582      -102.9317       -224.936       -80.8898,
            0        -1299.5        -4553.6        -5169.4
            456.2572              0         4417.7       543.0663};
        
    ELSEIF model == 3;
        B = { -3.976         -3.646         -3.384         -3.066
            -1.316         -1.034         -0.756         -0.450,
            14.006         13.168         12.944          8.310
            5.689          6.003              0         -3.718,
            0              0              0         82.650
            24.083         22.547        220.556        331.292,
            -4.047         -4.178         -4.066         -4.056
            -0.357          0.101          0.331          0.915,
            -186.061       -133.171       -102.565        -51.332
            32.379         32.647        113.373        164.126,
            0              0              0              0
            0              0      -2631.700      -3991.900,
            8.742          8.618          7.738          7.033
            -8.409        -10.402        -11.550        -14.190,
            432.079        265.479        175.276         49.401
            -161.528       -151.831       -473.134       -656.020,
            0              0              0      -1394.200
            0              0      10695.100      15590.500,
            -9.429         -8.798         -7.255         -5.884
            17.589         20.629         22.447         26.562,
            -482.271       -266.926       -151.218              0
            247.229        228.601        713.440        967.837,
            0              0              0       2606.700
            0              0     -16192.000     -22786.700,
            4.772          4.366          3.585          2.903
            -8.823        -10.319        -11.230        -13.299,
            228.913        130.218         75.135              0
            -118.604       -110.079       -352.587       -472.434,
            0              0              0      -1226.800
            0              0       8068.000      11018.100};
    ENDIF;
    
    let cv[2, 1] = "Asimp." "Finite";
    cv = cv~((y|x)*B);
    
    IF output_ind == 1;
        print " ======================================================================";
        print "          Critical values for the DF with one structural break";
        IF model == 1;
            print "                                Model A                     ";
        ELSEIF model == 2;
            print "                                Model B                     ";
        ELSEIF model == 3;
            print "                                Model C                     ";
        ENDIF;
        print " ----------------------------------------------------------------------";
        print "               1%    2.5%    5%    10%       90%    95%   97.5%   99%";
        print " ";
        y = printfm(cv, mask, fmt);
        print " ======================================================================";
    ENDIF;
    
    retp(cv[2, 2:9]');
endp;
