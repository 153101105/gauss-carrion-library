/*

Lybrary of the paper "Cointegration and structural breaks".

Procedures:
COI_END: test with endogenous selection of the break point,  estimation using DOLS
COI_KPSS: computes the test for a given break point (estimation using DOLS)
ALRVR: estimate the long-run variance as in Andrews (1991) and Kurozumi (2002).
VALORS: Procedure to obtain the critical values
DOLS: estimation using DOLS
DETERMI: Defines the deterministic regressors for the DOLS
*/




/* Procedure COI_END
**
** Computes the cointegration test with one unknown structural break
** where the break point is estimated either minimizing the value of the statistic and the sum of the squared
** residuals. The estimation of the cointegrating relationship bases on DOLS.
** See Carrion-i-Silvestre and Sanso (2006) for further details.
**
** Sintaxis:
**
**   vec_out  =   coi_end(y, x, model, k2, cri)
**
** INPUT:
**
**   y        (Tx1)-vector of the dependent variable
**
**   x        (Txk)-matrix of explanatory stochastic regressors
**
**   model    Scalar,  denotes the deterministic component:
**                =   1  for model An,
**                 2  for model A,
**                 3  for model B,
**                 4  for model C,
**                 5  for model D,
**                 6  for model E.
**
**   k2       Scalar. Indicates the deterministic component of the stochastic regressors.
**            If x is a matrix of I(1) variables with drift,  k2  =   1.
**            If x is a matrix of I(1) variables with a quadratic trend,  k2  =   2.
**
**
**    cri     (2x1)-vector where we specify whether the stochastic regressors are exogenous
**            or not,  and the initial number of leads and lags for the DOLS estimation.
**
**               cri[1]  =   0 if the regressors are weakly exogenous,
**                       =   1 if the regressors are not weakly exogenous
**                          (DOLS is used in this case).
**               cri[2]  Scalar,  defines the initial number of leads and lags for DOLS
**
** OUTPUT:
**
**   vec_out  (2x2)-matrix,  where the first rows gives the value of the min(SC) test and the estimated break point;
**           the second row gives the value of the SC statistic,  where the break point is estimated as min(SSR).
**
**        Last modification: October 31,  2003
*/

proc(1)  =   coi_end(y, x, model, k2, cri);
    
    local t,  i,  mod,  m_SC,  b,  tests,  minSC,  tbe,  vec_out, u, t_b;
    
    t =  rows(y);
    
    m_SC =  zeros(t-5, 2);
    
    i =  3;
    do until i>t-3;
        mod =  model[1]|i;
        if i>cri[2]+2 and i <t-5-cri[2];
            {b,  tests, u, t_b}  =   coi_kpss(y, x, mod, k2, cri);
            m_SC[i-2, 1] =  tests;
            m_SC[i-2, 2] =  u'u;
        else;
            m_SC[i-2, 1] =  2^20;
            m_SC[i-2, 2] =  m_SC[i-2, 1];
        endif;
        i =  i+1;
    endo;
    
    minSC =  minc(m_SC[., 1]);
    tbe =  2+minindc(m_SC[., 1]);
    vec_out =  minSc~tbe;
    
    tbe =  minindc(m_SC[., 2]);
    minSC =  m_SC[tbe, 1];
    vec_out =  vec_out|(minSc~(tbe+2));
    
    
    retp(vec_out);
    
endp;

/* Procedure COI_KPSS
**
** Computes the cointegration test with one known structural break.
**
** Sintaxis:
**
**   {b, tests, u, t_b}  =   coi_kpss(y, x, model, k2, cri)
**
** INPUT:
**
**   y        (Tx1)-vector of the dependent variable
**
**   x        (Txk)-matrix of explanatory stochastic regressors
**
**   model    (2x1)-vector,  denotes the deterministic component:
**
**              model[1]  =   1  for model An,
**                         2  for model A,
**                         3  for model B,
**                         4  for model C,
**                         5  for model D,
**                         6  for model E.
**
**              model[2]  Position of the break point.
**
**   k2       Scalar. Indicates the deterministic component of the stochastic regressors.
**            If x is a matrix of I(1) variables with drift,  k2  =   1.
**            If x is a matrix of I(1) variables with a quadratic trend,  k2  =   2.
**
**
**    cri     (2x1)-vector where we specify whether the stochastic regressors are exogenous
**            or not,  and the initial number of leads and lags for the DOLS estimation.
**
**               cri[1]  =   0 if the regressors are weakly exogenous,
**                       =   1 if the regressors are not weakly exogenous
**                          (DOLS is used in this case).
**               cri[2]  Scalar,  defines the initial number of leads and lags for DOLS
**
** OUTPUT:
**
**   b       DOLS estimates of the coefficients regressors.
**
**   tests   SC test (coinkpss-test).
**
**   u       Residuals of the model
**
**	 t_b	 Individual significance t-statistics
**
*/

proc (4)  =   coi_kpss(y, x, model, k2, cri);
    
    local xdu,  bic,  k,  bic_op,  beta_op,  u_op,  deter,  t,  xt,  b,  u,  sg,  tests,  t_b,  t_b_op;
    
    t  =   rows(y);
    
    if model[1] <0 or model[1]>6;
        errorlog("ERROR: Try to specify the deterministic component again");
        stop;
    endif;
    
    /****************************************/
    /****************************************/
    
    if cri[1] == 0; @ The stochastic regressors are weakly exogenous with respect to beta @
        if model[1]  ==  0;
            xt =  x;
        elseif model[1]>=1 and model[1]<=4;
            deter =  determi(model[1], t, model[2]);
            xt =  deter~x;
        elseif model[1]  ==  5;
            deter =  determi(1, t, model[2]);
            xdu =  x.*deter[., 2];
            xt =  deter~x~xdu;
        elseif model[1]  ==  6;
            deter =  determi(4, t, model[2]);
            xdu =  x.*deter[., 2];
            xt =  deter~x~xdu;
        endif;
        
        b =  y/xt;
        u =  y-xt*b;
        t_b =  model[2];
        
    elseif cri[1]  ==  1; @ The stochastic regressors are not weakly exogenous with respect to beta @
        k =  cri[2];
        bic_op =  100000000;
        do until k<0;
            {b, u, bic, t_b}  =   DOLS(y, x, model[1], k, k, model[2]);
            if bic<bic_op;
                bic_op =  bic;
                beta_op =  b;
                t_b_op =  t_b;
                u_op =  u;
            endif;
            k =  k-1;
        endo;
        
        u =  u_op;
        b =  beta_op;
        t_b =  t_b_op;
        
    ENDIF;
    
    sg =  alrvr(u);
    tests  =   inv(T^2*sg)*sumc(cumsumc(u)^2);
    
    retp(b, tests, u, t_b);
endp;

















/******************************************************************/
/*         Procedure to obtain the critical values                */
/******************************************************************/

proc (1)  =   valors(model, lam, k);
    
    local m_vc,  v_vc;
    
    IF model  ==  1; @ Model An @
        if k  ==  1;
            m_vc  =   {0.0182    0.0180    0.0177    0.0177    0.0174
                0.0172    0.0175    0.0178    0.0182,
                0.0219    0.0211    0.0208    0.0207    0.0203
                0.0204    0.0206    0.0211    0.0217,
                0.0255    0.0243    0.0240    0.0238    0.0235
                0.0237    0.0239    0.0243    0.0253,
                0.0310    0.0290    0.0285    0.0284    0.0281
                0.0284    0.0283    0.0293    0.0308,
                0.1932    0.1583    0.1395    0.1281    0.1256
                0.1272    0.1405    0.1603    0.1912,
                0.2582    0.2087    0.1855    0.1632    0.1553
                0.1594    0.1828    0.2148    0.2551,
                0.3367    0.2676    0.2341    0.1991    0.1855
                0.1933    0.2306    0.2731    0.3229,
                0.4546    0.3543    0.2948    0.2503    0.2287
                0.2435    0.2940    0.3628    0.4360};
        elseif k  ==  2;
            m_vc  =   {0.0161    0.0159    0.0155    0.0158    0.0156
                0.0157    0.0154    0.0156    0.0159,
                0.0190    0.0185    0.0181    0.0180    0.0181
                0.0181    0.0182    0.0183    0.0187,
                0.0217    0.0211    0.0208    0.0207    0.0206
                0.0208    0.0208    0.0209    0.0216,
                0.0258    0.0248    0.0246    0.0245    0.0244
                0.0246    0.0246    0.0246    0.0258,
                0.1336    0.1157    0.1079    0.1020    0.1029
                0.1033    0.1075    0.1179    0.1342,
                0.1796    0.1557    0.1400    0.1306    0.1292
                0.1297    0.1397    0.1566    0.1815,
                0.2325    0.2007    0.1759    0.1622    0.1557
                0.1600    0.1772    0.2014    0.2341,
                0.3116    0.2631    0.2259    0.2035    0.1903
                0.1998    0.2306    0.2643    0.3091};
        elseif k  ==  3;
            m_vc  =   {0.0145    0.0141    0.0141    0.0141     0.0142
                0.0144    0.0141    0.0142    0.0145,
                0.0166    0.0163    0.0163    0.0165    0.0164
                0.0163    0.0163    0.0164    0.0167,
                0.0191    0.0187    0.0187    0.0188    0.0187
                0.0186    0.0185    0.0188    0.0189,
                0.0224    0.0219    0.0217    0.0218    0.0219
                0.0219    0.0215    0.0219    0.0223,
                0.1007    0.0907    0.0856    0.0847    0.0840
                0.0852    0.0853    0.0911    0.1015,
                0.1319    0.1179    0.1094    0.1063    0.1051
                0.1067    0.1081    0.1174    0.1337,
                0.1670    0.1490    0.1338    0.1276    0.1271
                0.1301    0.1331    0.1463    0.1707,
                0.2238    0.1989    0.1773    0.1602    0.1594
                0.1624    0.1757    0.1956    0.2330};
        elseif k  ==  4;
            m_vc  =   {0.0131    0.0130    0.0130    0.0128    0.0130
                0.0127    0.0130    0.0131    0.0131,
                0.0150    0.0149    0.0148    0.0149    0.0147
                0.0146    0.0150    0.0149    0.0151,
                0.0170    0.0169    0.0167    0.0168    0.0168
                0.0168    0.0169    0.0169    0.0171,
                0.0198    0.0196    0.0195    0.0193    0.0196
                0.0196    0.0195    0.0196    0.0199,
                0.0799    0.0738    0.0712    0.0704    0.0706
                0.0711    0.0719    0.0731    0.0800,
                0.1037    0.0924    0.0873    0.0878    0.0874
                0.0874    0.0902    0.0927    0.1036,
                0.1304    0.1151    0.1091    0.1073    0.1056
                0.1060    0.1094    0.1164    0.1328,
                0.1754    0.1502    0.1385    0.1365    0.1350
                0.1355    0.1398    0.1487    0.1717};
        endif;
    elseif model  ==  2;
        if k  ==  1;
            m_vc  =   {0.0139    0.0141    0.0139    0.0140    0.0140
                0.0142    0.0141    0.0138    0.0140,
                0.0161    0.0160    0.0160    0.0162    0.0161
                0.0160    0.0160    0.0159    0.0161,
                0.0184    0.0181    0.0181    0.0185    0.0184
                0.0183    0.0183    0.0180    0.0183,
                0.0213    0.0211    0.0211    0.0214    0.0215
                0.0213    0.0213    0.0209    0.0213,
                0.0827    0.0736    0.0747    0.0821    0.0840
                0.0808    0.0749    0.0736    0.0819,
                0.1028    0.0885    0.0907    0.1021    0.1060
                0.0994    0.0890    0.0893    0.1011,
                0.1228    0.1054    0.1062    0.1229    0.1315
                0.1195    0.1035    0.1066    0.1197,
                0.1537    0.1305    0.1251    0.1508    0.1642
                0.1486    0.1219    0.1301    0.1463};
        elseif k  ==  2;
            m_vc  =   {0.0129    0.0128    0.0129    0.0128    0.0128
                0.0128    0.0129    0.0129    0.0128,
                0.0148    0.0147    0.0148    0.0147    0.0149
                0.0147    0.0147    0.0147    0.0145,
                0.0167    0.0166    0.0167    0.0166    0.0167
                0.0166    0.0165    0.0165    0.0165,
                0.0192    0.0191    0.0192    0.0193    0.0193
                0.0191    0.0191    0.0191    0.0191,
                0.0700    0.0630    0.0650    0.0690    0.0693
                0.0676    0.0647    0.0638    0.0696,
                0.0865    0.0759    0.0774    0.0852    0.0858
                0.0841    0.0777    0.0778    0.0855,
                0.1033    0.0891    0.0909    0.1023    0.1037
                0.1023    0.0927    0.0918    0.1022,
                0.1273    0.1095    0.1083    0.1254    0.1348
                0.1255    0.1103    0.1119    0.1244};
        elseif k  ==  3;
            m_vc  =   {0.0118    0.0118    0.0118    0.0118    0.0120
                0.0118    0.0117    0.0118    0.0118,
                0.0135    0.0134    0.0136    0.0136    0.0135
                0.0135    0.0135    0.0135    0.0135,
                0.0151    0.0151    0.0152    0.0152    0.0152
                0.0153    0.0152    0.0152    0.0151,
                0.0174    0.0175    0.0174    0.0174    0.0175
                0.0175    0.0173    0.0174    0.0175,
                0.0594    0.0554    0.0571    0.0581    0.0584
                0.0581    0.0566    0.0556    0.0593,
                0.0728    0.0670    0.0692    0.0712    0.0725
                0.0710    0.0677    0.0667    0.0728,
                0.0871    0.0784    0.0803    0.0843    0.0877
                0.0851    0.0788    0.0780    0.0873,
                0.1064    0.0941    0.0971    0.1035    0.1103
                0.1044    0.0961    0.0949    0.1074};
        elseif k  ==  4;
            m_vc  =   {0.0109    0.0111    0.0113    0.0111    0.0112
                0.0110    0.0111    0.0112    0.0111,
                0.0125    0.0126    0.0126    0.0125    0.0127
                0.0124    0.0124    0.0126    0.0126,
                0.0139    0.0140    0.0141    0.0140    0.0142
                0.0139    0.0139    0.0141    0.0140,
                0.0160    0.0160    0.0161    0.0161    0.0161
                0.0160    0.0159    0.0161    0.0160,
                0.0507    0.0490    0.0501    0.0509    0.0510
                0.0502    0.0495    0.0489    0.0512,
                0.0616    0.0588    0.0606    0.0617    0.0621
                0.0614    0.0598    0.0592    0.0623,
                0.0729    0.0691    0.0724    0.0728    0.0741
                0.0738    0.0702    0.0699    0.0749,
                0.0898    0.0846    0.0864    0.0886    0.0938
                0.0916    0.0852    0.0845    0.0920};
        endif;
    elseif model  ==  3;
        if k  ==  1;
            m_vc  =   {0.0138    0.0132    0.0128    0.0126    0.0124
                0.0128    0.0126    0.0131    0.0140,
                0.0159    0.0151    0.0147    0.0145    0.0143
                0.0146    0.0146    0.0152    0.0161,
                0.0183    0.0171    0.0165    0.0163    0.0160
                0.0164    0.0165    0.0171    0.0185,
                0.0213    0.0198    0.0192    0.0187    0.0186
                0.0188    0.0190    0.0198    0.0215,
                0.0842    0.0747    0.0663    0.0614    0.0604
                0.0619    0.0670    0.0746    0.0849,
                0.1059    0.0919    0.0809    0.0730    0.0729
                0.0753    0.0824    0.0921    0.1061,
                0.1280    0.1102    0.0973    0.0863    0.0844
                0.0883    0.0986    0.1098    0.1289,
                0.1578    0.1313    0.1197    0.1039    0.1013
                0.1086    0.1195    0.1369    0.1580};
        elseif k  ==  2;
            m_vc  =   {0.0128    0.0121    0.0118    0.0117    0.0118
                0.0117    0.0118    0.0124    0.0127,
                0.0148    0.0138    0.0136    0.0133    0.0133
                0.0133    0.0136    0.0139    0.0146,
                0.0167    0.0157    0.0152    0.0149    0.0149
                0.0149    0.0152    0.0156    0.0166,
                0.0193    0.0180    0.0174    0.0171    0.0172
                0.0171    0.0173    0.0180    0.0192,
                0.0723    0.0632    0.0579    0.0542    0.0533
                0.0542    0.0575    0.0631    0.0714,
                0.0892    0.0775    0.0694    0.0651    0.0639
                0.0646    0.0706    0.0771    0.0884,
                0.1069    0.0925    0.0825    0.0761    0.0752
                0.0756    0.0842    0.0912    0.1065,
                0.1314    0.1161    0.1019    0.0940    0.0903
                0.0915    0.1021    0.1118    0.1335};
        elseif k  ==  3;
            m_vc  =   {0.0118    0.0110    0.0112    0.0108    0.0110
                0.0108    0.0110    0.0113    0.0116,
                0.0134    0.0127    0.0127    0.0123    0.0126
                0.0123    0.0124    0.0128    0.0132,
                0.0150    0.0143    0.0141    0.0138    0.0139
                0.0137    0.0139    0.0143    0.0148,
                0.0173    0.0164    0.0161    0.0159    0.0158
                0.0158    0.0159    0.0165    0.0171,
                0.0602    0.0536    0.0507    0.0475    0.0470
                0.0479    0.0503    0.0539    0.0593,
                0.0740    0.0657    0.0613    0.0575    0.0561
                0.0571    0.0608    0.0660    0.0728,
                0.0884    0.0784    0.0724    0.0675    0.0663
                0.0675    0.0723    0.0782    0.0875,
                0.1106    0.0969    0.0888    0.0805    0.0788
                0.0816    0.0881    0.0950    0.1076};
        elseif k  ==  4;
            m_vc  =   {0.0109    0.0105    0.0104    0.0103    0.0102
                0.0104    0.0104    0.0107    0.0108,
                0.0125    0.0118    0.0117    0.0116    0.0116
                0.0116    0.0117    0.0120    0.0124,
                0.0139    0.0132    0.0131    0.0129    0.0129
                0.0129    0.0130    0.0132    0.0139,
                0.0159    0.0151    0.0148    0.0146    0.0146
                0.0147    0.0148    0.0151    0.0158,
                0.0523    0.0472    0.0443    0.0429    0.0421
                0.0423    0.0443    0.0470    0.0520,
                0.0638    0.0574    0.0529    0.0511    0.0498
                0.0506    0.0531    0.0567    0.0637,
                0.0757    0.0684    0.0626    0.0596    0.0578
                0.0592    0.0622    0.0672    0.0758,
                0.0921    0.0834    0.0756    0.0711    0.0699
                0.0712    0.0769    0.0819    0.0928};
        endif;
    elseif model  ==  4;
        if k  ==  1;
            m_vc  =   {0.0133    0.0120    0.0117    0.0115    0.0115
                0.0115    0.0118    0.0120    0.0134,
                0.0153    0.0138    0.0133    0.0131    0.0129
                0.0131    0.0134    0.0139    0.0153,
                0.0174    0.0156    0.0148    0.0147    0.0145
                0.0146    0.0150    0.0157    0.0174,
                0.0204    0.0181    0.0171    0.0168    0.0165
                0.0167    0.0172    0.0181    0.0205,
                0.0802    0.0661    0.0559    0.0493    0.0484
                0.0493    0.0561    0.0664    0.0802,
                0.1000    0.0813    0.0673    0.0579    0.0562
                0.0581    0.0681    0.0826    0.0994,
                0.1200    0.0973    0.0802    0.0669    0.0645
                0.0684    0.0804    0.0987    0.1204,
                0.1470    0.1208    0.0967    0.0799    0.0746
                0.0817    0.0979    0.1182    0.1518};
        elseif k  ==  2;
            m_vc  =   {0.0121    0.0113    0.0109    0.0108    0.0108
                0.0107    0.0109    0.0114    0.0120,
                0.0139    0.0129    0.0124    0.0122    0.0121
                0.0123    0.0124    0.0129    0.0137,
                0.0158    0.0144    0.0139    0.0137    0.0135
                0.0137    0.0139    0.0144    0.0155,
                0.0183    0.0165    0.0158    0.0155    0.0154
                0.0156    0.0158    0.0167    0.0181,
                0.0667    0.0567    0.0487    0.0450    0.0430
                0.0450    0.0488    0.0557    0.0665,
                0.0828    0.0696    0.0583    0.0530    0.0498
                0.0533    0.0592    0.0691    0.0822,
                0.0998    0.0824    0.0687    0.0614    0.0574
                0.0609    0.0703    0.0820    0.0995,
                0.1235    0.1010    0.0843    0.0731    0.0680
                0.0720    0.0838    0.1014    0.1229};
        elseif k  ==  3;
            m_vc  =   {0.0110    0.0106    0.0104    0.0101    0.0101
                0.0101    0.0103    0.0107    0.0111,
                0.0126    0.0119    0.0116    0.0113    0.0114
                0.0114    0.0116    0.0119    0.0126,
                0.0142    0.0133    0.0129    0.0126    0.0127
                0.0127    0.0129    0.0133    0.0142,
                0.0165    0.0152    0.0146    0.0143    0.0144
                0.0144    0.0148    0.0151    0.0165,
                0.0563    0.0493    0.0430    0.0403    0.0393
                0.0405    0.0432    0.0488    0.0567,
                0.0688    0.0602    0.0518    0.0476    0.0463
                0.0478    0.0518    0.0595    0.0695,
                0.0819    0.0716    0.0616    0.0551    0.0527
                0.0551    0.0606    0.0706    0.0837,
                0.1023    0.0887    0.0754    0.0657    0.0618
                0.0657    0.0745    0.0883    0.1036};
        elseif k  ==  4;
            m_vc  =   {0.0105    0.0099    0.0097    0.0097    0.0096
                0.0096    0.0097    0.0098    0.0104,
                0.0117    0.0112    0.0109    0.0109    0.0108
                0.0108    0.0109    0.0111    0.0118,
                0.0131    0.0123    0.0121    0.0120    0.0119
                0.0119    0.0120    0.0124    0.0132,
                0.0150    0.0140    0.0136    0.0135    0.0135
                0.0135    0.0136    0.0140    0.0151,
                0.0491    0.0428    0.0389    0.0368    0.0359
                0.0367    0.0387    0.0427    0.0491,
                0.0603    0.0510    0.0464    0.0431    0.0415
                0.0430    0.0460    0.0516    0.0600,
                0.0714    0.0614    0.0544    0.0495    0.0474
                0.0497    0.0542    0.0615    0.0715,
                0.0871    0.0748    0.0659    0.0592    0.0559
                0.0582    0.0661    0.0745    0.0894};
        endif;
    elseif model  ==  5;
        if k  ==  1;
            m_vc  =   {0.0178    0.0167    0.0160    0.0156    0.0158
                0.0156    0.0162    0.0166    0.0177,
                0.0211    0.0194    0.0185    0.0181    0.0181
                0.0183    0.0187    0.0195    0.0210,
                0.0248    0.0225    0.0214    0.0208    0.0207
                0.0209    0.0215    0.0225    0.0247,
                0.0303    0.0269    0.0253    0.0247    0.0244
                0.0246    0.0257    0.0271    0.0301,
                0.1908    0.1547    0.1265    0.1098    0.1044
                0.1087    0.1276    0.1502    0.1898,
                0.2560    0.2067    0.1670    0.1395    0.1309
                0.1392    0.1682    0.2041    0.2571,
                0.3295    0.2631    0.2098    0.1729    0.1603
                0.1724    0.2176    0.2657    0.3341,
                0.4463    0.3449    0.2699    0.2224    0.1941
                0.2145    0.2862    0.3563    0.4449};
        elseif k  ==  2;
            m_vc  =   {0.0153    0.0141    0.0135    0.0130    0.0128
                0.0132    0.0134    0.0138    0.0152,
                0.0179    0.0163    0.0155    0.0148    0.0149
                0.0151    0.0155    0.0162    0.0180,
                0.0206    0.0188    0.0176    0.0168    0.0169
                0.0171    0.0177    0.0185    0.0207,
                0.0247    0.0220    0.0206    0.0197    0.0194
                0.0198    0.0206    0.0219    0.0247,
                0.1319    0.1087    0.0885    0.0760    0.0735
                0.0765    0.0878    0.1064    0.1351,
                0.1759    0.1459    0.1163    0.0969    0.0922
                0.0988    0.1141    0.1423    0.1810,
                0.2288    0.1873    0.1485    0.1198    0.1123
                0.1224    0.1464    0.1853    0.2349,
                0.3068    0.2510    0.1942    0.1578    0.1419
                0.1565    0.1950    0.2482    0.3261};
        elseif k  ==  3;
            m_vc  =   {0.0132    0.0121    0.0117    0.0113    0.0113
                0.0112    0.0115    0.0122    0.0133,
                0.0156    0.0141    0.0132    0.0128    0.0128
                0.0126    0.0131    0.0140    0.0156,
                0.0180    0.0160    0.0149    0.0145    0.0142
                0.0143    0.0149    0.0159    0.0179,
                0.0211    0.0186    0.0171    0.0166    0.0164
                0.0164    0.0171    0.0184    0.0211,
                0.0983    0.0803    0.0664    0.0572    0.0542
                0.0562    0.0648    0.0793    0.0973,
                0.1286    0.1049    0.0851    0.0721    0.0672
                0.0715    0.0824    0.1037    0.1291,
                0.1638    0.1363    0.1079    0.0883    0.0819
                0.0894    0.1043    0.1317    0.1651,
                0.2307    0.1816    0.1425    0.1145    0.1039
                0.1127    0.1367    0.1757    0.2165};
        elseif k  ==  4;
            m_vc  =   {0.0119    0.0109    0.0102    0.0099    0.0099
                0.0099    0.0103    0.0110    0.0122,
                0.0139    0.0125    0.0115    0.0112    0.0111
                0.0112    0.0117    0.0124    0.0140,
                0.0158    0.0140    0.0129    0.0125    0.0123
                0.0125    0.0130    0.0140    0.0160,
                0.0185    0.0161    0.0147    0.0142    0.0141
                0.0142    0.0149    0.0161    0.0186,
                0.0772    0.0616    0.0512    0.0451    0.0423
                0.0445    0.0507    0.0620    0.0771,
                0.0981    0.0791    0.0648    0.0548    0.0514
                0.0540    0.0646    0.0799    0.0986,
                0.1225    0.1002    0.0806    0.0658    0.0613
                0.0660    0.0804    0.1007    0.1230,
                0.1579    0.1312    0.1048    0.0852    0.0766
                0.0837    0.1028    0.1364    0.1623};
        endif;
    elseif model  ==  6;
        if k  ==  1;
            m_vc  =   {0.0130    0.0121    0.0113    0.0109    0.0106
                0.0108    0.0113    0.0117    0.0131,
                0.0150    0.0136    0.0127    0.0123    0.0120
                0.0122    0.0128    0.0137    0.0153,
                0.0171    0.0154    0.0142    0.0136    0.0134
                0.0137    0.0143    0.0153    0.0172,
                0.0203    0.0178    0.0164    0.0156    0.0152
                0.0156    0.0164    0.0176    0.0203,
                0.0808    0.0654    0.0538    0.0463    0.0436
                0.0462    0.0538    0.0648    0.0801,
                0.1004    0.0804    0.0659    0.0552    0.0512
                0.0551    0.0650    0.0799    0.0981,
                0.1205    0.0974    0.0784    0.0645    0.0587
                0.0633    0.0780    0.0959    0.1185,
                0.1480    0.1223    0.0960    0.0763    0.0681
                0.0765    0.0938    0.1196    0.1469};
        elseif k  ==  2;
            m_vc  =   {0.0119    0.0105    0.0099    0.0098    0.0095
                0.0097    0.0100    0.0106    0.0120,
                0.0137    0.0121    0.0112    0.0110    0.0107
                0.0108    0.0113    0.0121    0.0137,
                0.0153    0.0135    0.0125    0.0122    0.0119
                0.0119    0.0126    0.0134    0.0155,
                0.0178    0.0156    0.0143    0.0137    0.0135
                0.0136    0.0143    0.0155    0.0180,
                0.0671    0.0540    0.0448    0.0387    0.0363
                0.0386    0.0448    0.0536    0.0671,
                0.0832    0.0661    0.0544    0.0462    0.0423
                0.0455    0.0548    0.0668    0.0836,
                0.0994    0.0790    0.0639    0.0534    0.0488
                0.0535    0.0658    0.0787    0.1011,
                0.1218    0.0980    0.0795    0.0641    0.0574
                0.0636    0.0815    0.1002    0.1276};
        elseif k  ==  3;
            m_vc  =   {0.0108    0.0099    0.0091    0.0088    0.0087
                0.0088    0.0091    0.0096    0.0107,
                0.0123    0.0110    0.0102    0.0097    0.0096
                0.0098    0.0102    0.0109    0.0123,
                0.0139    0.0123    0.0113    0.0107    0.0107
                0.0109    0.0113    0.0122    0.0138,
                0.0161    0.0140    0.0128    0.0121    0.0119
                0.0122    0.0128    0.0141    0.0161,
                0.0561    0.0457    0.0375    0.0323    0.0309
                0.0324    0.0377    0.0458    0.0562,
                0.0696    0.0559    0.0454    0.0379    0.0360
                0.0386    0.0456    0.0566    0.0690,
                0.0828    0.0658    0.0542    0.0444    0.0406
                0.0448    0.0542    0.0684    0.0837,
                0.1040    0.0821    0.0660    0.0529    0.0474
                0.0541    0.0666    0.0840    0.1054};
        elseif k  ==  4;
            m_vc  =   {0.0099    0.0090    0.0083    0.0081    0.0079
                0.0081    0.0081    0.0089    0.0101,
                0.0113    0.0100    0.0092    0.0089    0.0088
                0.0089    0.0092    0.0100    0.0114,
                0.0126    0.0110    0.0102    0.0098    0.0096
                0.0098    0.0102    0.0111    0.0128,
                0.0145    0.0126    0.0115    0.0109    0.0108
                0.0109    0.0115    0.0126    0.0147,
                0.0484    0.0391    0.0326    0.0282    0.0266
                0.0280    0.0324    0.0397    0.0484,
                0.0597    0.0476    0.0393    0.0329    0.0308
                0.0333    0.0388    0.0483    0.0590,
                0.0719    0.0572    0.0463    0.0379    0.0353
                0.0385    0.0462    0.0571    0.0712,
                0.0899    0.0703    0.0570    0.0454    0.0411
                0.0462    0.0557    0.0707    0.0866};
        endif;
    endif;
    
    IF (0 < lam) AND (lam <= 0.15);
        v_vc = m_vc[., 1];
    elseif (0.15 < lam) AND (lam <= 0.25);
        v_vc = m_vc[., 2];
    elseif (0.25 < lam) AND (lam <= 0.35);
        v_vc = m_vc[., 3];
    elseif (0.35 < lam) AND (lam <= 0.45);
        v_vc = m_vc[., 4];
    elseif (0.45 < lam) AND (lam <= 0.55);
        v_vc = m_vc[., 5];
    elseif (0.55 < lam) AND (lam <= 0.65);
        v_vc = m_vc[., 6];
    elseif (0.65 < lam) AND (lam <= 0.75);
        v_vc = m_vc[., 7];
    elseif (0.75 < lam) AND (lam <= 0.85);
        v_vc = m_vc[., 8];
    elseif (0.85 < lam) AND (lam < 1);
        v_vc = m_vc[., 9];
    else;
        errorlog("ERROR! Try to specify the value of lambda again");
        stop;
    endif;
    
    retp(v_vc);
    
endp;












/*
** Procedure ALRVR to estimate the long-run variance as
** in Andrews (1991) and Kurozumi (2002).
**
*/

proc(1) =  alrvr(e);
    
    local t,  a,  k,  l,  lrv,  i,  w;
    
    t =  rows(e);
    a  =   e[2:t]/e[1:t-1]; @ AR(1) estimate @
    k =  0.8; @ Defines the upper bound @
    l  =   minc(1.1447*(4*a^2*T/((1+a)^2*(1-a)^2))^(1/3)
        |1.1447*(4*k^2*T  /((1+k)^2*(1-k)^2))^(1/3));
    l =  trunc(l); @ Truncate the estimated bandwidth @
    lrv =  e'e/t; @ Short-run variance @
    i =  1;
    do until i>l; @ long-run variance @
        w =  (1-i/(l+1)); @ Bartlett kernel @
        lrv =  lrv+2*e[1:t-i]'e[1+i:t]*w/t;
        i =  i+1;
    endo;
    
    retp(lrv);
endp;











/* Procedure to compute the DOLS estimations
**
** Sintaxis:
**
**  {beta, residuals, bic, t_beta}  =   DOLS(y, x, model, klags, kleads, tb);
**
** Input:
**
**      y       (Tx1)-vector of endogenous time series
**      x       (Txk)-matrix of stochastic regressors
**      model    =   0 no deterministic regressors
**               =   1 for a A
**               =   2 for a A
**               =   3 for a B
**               =   4 for a C
**               =   5 for a D
**               =   6 for a E
**      klags   scalar,  number of lags
**      kleads  scalar,  number of leads
**      tb      time of the break
**
** Output:
**
**      beta    (kx1)-vector of estimated parameters
**		t_beta	vector of individual significance statistics
**
**  (c) 2003 Josep Lluís Carrion-i-Silvestre
**
**  Last modification: February 27th,  2003
*/


proc(4)  =   DOLS(y, x, model, klags, kleads, tb);
    
    local t,  streg,  d_streg,  i,  lags,  d_streg_r,  leads,  ll,  xreg,  beta,  bic,  deter,  xdu,  e,  s2,  t_beta;
    
    t =  rows(y);
    
    streg =  x;
    d_streg =  streg[2:t, .]-streg[1:t-1, .];
    
    i =  1;
    do until i>klags;
        d_streg =  d_streg~lagn(streg[2:t, .]-streg[1:t-1, .], i);
        i =  i+1;
    endo;
    
    d_streg_r =  rev(streg[2:t, .]-streg[1:t-1, .]);
    
    i =  1;
    do until i>kleads;
        d_streg_r =  d_streg_r~lagn(rev(streg[2:t, .]-streg[1:t-1, .]), i);
        i =  i+1;
    endo;
    
    if (klags ne 0) and (kleads ne 0);
        lags =  d_streg;
        leads =  rev(d_streg_r[., cols(streg)+1:cols(d_streg_r)]);
        ll =  trimr(lags~leads, klags, kleads);
    elseif (klags ne 0) and (kleads  ==  0);
        lags =  d_streg;
        ll =  trimr(lags, klags, 0);
    elseif (klags  ==  0) and (kleads ne 0);
        lags =  d_streg;
        leads =  rev(d_streg_r[., cols(streg)+1:cols(d_streg_r)]);
        ll =  trimr(lags~leads, 0, kleads);
    elseif (klags  ==  0) and (kleads  ==  0);
        lags =  d_streg;
        ll =  lags;
    endif;
    
    if model == 0;
        xreg = streg[klags+2:T-kleads, .]~ll;
    elseif model >= 1 and model <= 4;
        deter = determi(model, t, tb);
        xreg = deter[klags+2:T-kleads, .]~streg[klags+2:T-kleads, .]~ll;
    elseif model == 5;
        deter = determi(1, t, tb);
        xdu = x.*deter[., 2];
        xreg = deter[klags+2:T-kleads, .]~streg[klags+2:T-kleads, .]~xdu[klags+2:T-kleads, .]~ll;
    elseif model == 6;
        deter = determi(4, t, tb);
        xdu = x.*deter[., 2];
        xreg = deter[klags+2:T-kleads, .]~streg[klags+2:T-kleads, .]~xdu[klags+2:T-kleads, .]~ll;
    endif;
    
    beta =  y[klags+2:T-kleads, 1]/xreg;
    e =  y[klags+2:T-kleads, 1]-xreg*beta;
    s2 =  e'e/(rows(xreg)-cols(xreg));
    t_beta =  beta./sqrt(diag(s2*invpd(xreg'xreg)));
    
    bic =  ln(e'e/(rows(xreg)-cols(xreg)))+cols(xreg)*ln(rows(xreg))/rows(xreg);
    
    retp(beta, e, bic, t_beta);
    
endp;








/*
** Procedure DETERMI
**
** Defines the deterministic components.
**
**
*/

proc(1)  =   determi(model, t, tb);
    
    local du,  dt,  xt;
    
    du =  zeros(tb, 1)|ones(t-tb, 1);
    dt =  zeros(tb, 1)|seqa(1, 1, t-tb);
    
    
    
    if model[1]  ==  1; @ Model An @
        xt  =   ones(t, 1)~du;
    elseif model[1]  ==  2; @ Model A @
        xt  =   ones(t, 1)~du~seqa(1, 1, t);
    elseif model[1]  ==  3; @ Model B @
        xt  =   ones(t, 1)~seqa(1, 1, t)~dt;
    elseif model[1]  ==  4; @ Model C @
        xt  =   ones(t, 1)~du~seqa(1, 1, t)~dt;
    else;
        errorlog("ERROR: Try to specify the deterministic component again");
        stop;
    endif;
    
    retp(xt);
endp;


